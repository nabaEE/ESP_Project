<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="1" total="26" passed="24">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="159093" started-at="2019-10-08T04:09:10Z" finished-at="2019-10-08T04:11:49Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="159093" started-at="2019-10-08T04:09:10Z" finished-at="2019-10-08T04:11:49Z">
      <class name="com.newHire.NewHireTest">
        <test-method status="PASS" signature="openBrowser(java.lang.String)[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="openBrowser" is-config="true" duration-ms="7629" started-at="2019-10-08T04:09:10Z" finished-at="2019-10-08T04:09:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox 68]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="3429" started-at="2019-10-08T04:09:17Z" finished-at="2019-10-08T04:09:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="VerifyErrorForkeepingTitleWinBlank()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="VerifyErrorForkeepingTitleWinBlank" duration-ms="1936" started-at="2019-10-08T04:09:21Z" finished-at="2019-10-08T04:09:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyErrorForkeepingTitleWinBlank -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="801" started-at="2019-10-08T04:09:23Z" finished-at="2019-10-08T04:09:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="1785" started-at="2019-10-08T04:09:23Z" finished-at="2019-10-08T04:09:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="checkErrorForKeepingCityOfBirthBlank()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="checkErrorForKeepingCityOfBirthBlank" duration-ms="2314" started-at="2019-10-08T04:09:25Z" finished-at="2019-10-08T04:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkErrorForKeepingCityOfBirthBlank -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="675" started-at="2019-10-08T04:09:27Z" finished-at="2019-10-08T04:09:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="1221" started-at="2019-10-08T04:09:28Z" finished-at="2019-10-08T04:09:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="checkErrorForKeepingReferalSearchBoxBlank()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="checkErrorForKeepingReferalSearchBoxBlank" duration-ms="2886" started-at="2019-10-08T04:09:29Z" finished-at="2019-10-08T04:09:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkErrorForKeepingReferalSearchBoxBlank -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="616" started-at="2019-10-08T04:09:32Z" finished-at="2019-10-08T04:09:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="1190" started-at="2019-10-08T04:09:33Z" finished-at="2019-10-08T04:09:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="checkErrorForKeepingRelevantExpEditboxBlank()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="checkErrorForKeepingRelevantExpEditboxBlank" duration-ms="2471" started-at="2019-10-08T04:09:34Z" finished-at="2019-10-08T04:09:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkErrorForKeepingRelevantExpEditboxBlank -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="602" started-at="2019-10-08T04:09:37Z" finished-at="2019-10-08T04:09:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="1164" started-at="2019-10-08T04:09:37Z" finished-at="2019-10-08T04:09:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="checkErrorForNotPickingCitizenShip()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="checkErrorForNotPickingCitizenShip" duration-ms="1808" started-at="2019-10-08T04:09:38Z" finished-at="2019-10-08T04:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkErrorForNotPickingCitizenShip -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="665" started-at="2019-10-08T04:09:40Z" finished-at="2019-10-08T04:09:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="973" started-at="2019-10-08T04:09:41Z" finished-at="2019-10-08T04:09:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="checkErrorForNotPickingEducationDetails()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="checkErrorForNotPickingEducationDetails" duration-ms="1899" started-at="2019-10-08T04:09:42Z" finished-at="2019-10-08T04:09:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkErrorForNotPickingEducationDetails -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="591" started-at="2019-10-08T04:09:44Z" finished-at="2019-10-08T04:09:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="1248" started-at="2019-10-08T04:09:44Z" finished-at="2019-10-08T04:09:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="checkErrorForNotPickingGender()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="checkErrorForNotPickingGender" duration-ms="1908" started-at="2019-10-08T04:09:45Z" finished-at="2019-10-08T04:09:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkErrorForNotPickingGender -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="687" started-at="2019-10-08T04:09:47Z" finished-at="2019-10-08T04:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="1263" started-at="2019-10-08T04:09:48Z" finished-at="2019-10-08T04:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="checkErrorForNotPickingGroupJoiningDate()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="checkErrorForNotPickingGroupJoiningDate" duration-ms="1766" started-at="2019-10-08T04:09:49Z" finished-at="2019-10-08T04:09:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkErrorForNotPickingGroupJoiningDate -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="585" started-at="2019-10-08T04:09:51Z" finished-at="2019-10-08T04:09:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="965" started-at="2019-10-08T04:09:52Z" finished-at="2019-10-08T04:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="checkErrorForNotPickingJoiningDate()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="checkErrorForNotPickingJoiningDate" duration-ms="1755" started-at="2019-10-08T04:09:53Z" finished-at="2019-10-08T04:09:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkErrorForNotPickingJoiningDate -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="661" started-at="2019-10-08T04:09:54Z" finished-at="2019-10-08T04:09:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="1008" started-at="2019-10-08T04:09:55Z" finished-at="2019-10-08T04:09:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="checkErrorForNotPickingUniversityName()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="checkErrorForNotPickingUniversityName" duration-ms="2700" started-at="2019-10-08T04:09:56Z" finished-at="2019-10-08T04:09:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkErrorForNotPickingUniversityName -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="575" started-at="2019-10-08T04:09:59Z" finished-at="2019-10-08T04:09:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="1012" started-at="2019-10-08T04:09:59Z" finished-at="2019-10-08T04:10:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="checkErrorForNotSelectingMaritalStatus()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="checkErrorForNotSelectingMaritalStatus" duration-ms="1875" started-at="2019-10-08T04:10:00Z" finished-at="2019-10-08T04:10:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkErrorForNotSelectingMaritalStatus -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="659" started-at="2019-10-08T04:10:02Z" finished-at="2019-10-08T04:10:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="986" started-at="2019-10-08T04:10:03Z" finished-at="2019-10-08T04:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="FAIL" signature="checkErrorMessageForEnteringExistingEmail()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="checkErrorMessageForEnteringExistingEmail" duration-ms="18257" started-at="2019-10-08T04:10:04Z" finished-at="2019-10-08T04:10:22Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Mail Id already Exists.] but found [The User Handle already exists in the system. Please correct.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Mail Id already Exists.] but found [The User Handle already exists in the system. Please correct.]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.newHire.NewHireTest.checkErrorMessageForEnteringExistingEmail(NewHireTest.java:389)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkErrorMessageForEnteringExistingEmail -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="735" started-at="2019-10-08T04:10:22Z" finished-at="2019-10-08T04:10:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="1178" started-at="2019-10-08T04:10:23Z" finished-at="2019-10-08T04:10:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="checkErrorMessageForNotPickingDOB()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="checkErrorMessageForNotPickingDOB" duration-ms="2209" started-at="2019-10-08T04:10:24Z" finished-at="2019-10-08T04:10:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkErrorMessageForNotPickingDOB -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="617" started-at="2019-10-08T04:10:26Z" finished-at="2019-10-08T04:10:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="1110" started-at="2019-10-08T04:10:27Z" finished-at="2019-10-08T04:10:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="checkErrorMessageForNotPickingStateOfBirth()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="checkErrorMessageForNotPickingStateOfBirth" duration-ms="2957" started-at="2019-10-08T04:10:28Z" finished-at="2019-10-08T04:10:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkErrorMessageForNotPickingStateOfBirth -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="681" started-at="2019-10-08T04:10:31Z" finished-at="2019-10-08T04:10:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="1026" started-at="2019-10-08T04:10:32Z" finished-at="2019-10-08T04:10:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="clickAndverifyTitleDropdownValues()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="clickAndverifyTitleDropdownValues" duration-ms="3499" started-at="2019-10-08T04:10:33Z" finished-at="2019-10-08T04:10:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickAndverifyTitleDropdownValues -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="574" started-at="2019-10-08T04:10:36Z" finished-at="2019-10-08T04:10:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="957" started-at="2019-10-08T04:10:37Z" finished-at="2019-10-08T04:10:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="enterExistEmployeeIdAndValidateErrorMessage()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="enterExistEmployeeIdAndValidateErrorMessage" duration-ms="16338" started-at="2019-10-08T04:10:38Z" finished-at="2019-10-08T04:10:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterExistEmployeeIdAndValidateErrorMessage -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="634" started-at="2019-10-08T04:10:54Z" finished-at="2019-10-08T04:10:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="1044" started-at="2019-10-08T04:10:55Z" finished-at="2019-10-08T04:10:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="keepEmailIdSectionBlankAndVerifyError()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="keepEmailIdSectionBlankAndVerifyError" duration-ms="2507" started-at="2019-10-08T04:10:56Z" finished-at="2019-10-08T04:10:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- keepEmailIdSectionBlankAndVerifyError -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="656" started-at="2019-10-08T04:10:58Z" finished-at="2019-10-08T04:10:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="1174" started-at="2019-10-08T04:10:59Z" finished-at="2019-10-08T04:11:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="makeBothDOB_JoiningDateEqualAndverifyError()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="makeBothDOB_JoiningDateEqualAndverifyError" duration-ms="14784" started-at="2019-10-08T04:11:00Z" finished-at="2019-10-08T04:11:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeBothDOB_JoiningDateEqualAndverifyError -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="628" started-at="2019-10-08T04:11:15Z" finished-at="2019-10-08T04:11:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="1255" started-at="2019-10-08T04:11:16Z" finished-at="2019-10-08T04:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="makeEmployeeIdEditboxBlankAndValidateError()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="makeEmployeeIdEditboxBlankAndValidateError" duration-ms="2521" started-at="2019-10-08T04:11:17Z" finished-at="2019-10-08T04:11:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeEmployeeIdEditboxBlankAndValidateError -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="642" started-at="2019-10-08T04:11:19Z" finished-at="2019-10-08T04:11:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="1251" started-at="2019-10-08T04:11:20Z" finished-at="2019-10-08T04:11:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="verifyErrorForNotPickingCountry()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="verifyErrorForNotPickingCountry" duration-ms="1928" started-at="2019-10-08T04:11:21Z" finished-at="2019-10-08T04:11:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyErrorForNotPickingCountry -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="722" started-at="2019-10-08T04:11:23Z" finished-at="2019-10-08T04:11:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="973" started-at="2019-10-08T04:11:24Z" finished-at="2019-10-08T04:11:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="verifyErrorForNotPickingLegalEntity()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="verifyErrorForNotPickingLegalEntity" duration-ms="3228" started-at="2019-10-08T04:11:25Z" finished-at="2019-10-08T04:11:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyErrorForNotPickingLegalEntity -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="605" started-at="2019-10-08T04:11:28Z" finished-at="2019-10-08T04:11:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="1227" started-at="2019-10-08T04:11:29Z" finished-at="2019-10-08T04:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="verifyErrorForNotPickingLocation()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="verifyErrorForNotPickingLocation" duration-ms="2879" started-at="2019-10-08T04:11:30Z" finished-at="2019-10-08T04:11:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyErrorForNotPickingLocation -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="540" started-at="2019-10-08T04:11:33Z" finished-at="2019-10-08T04:11:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="1216" started-at="2019-10-08T04:11:33Z" finished-at="2019-10-08T04:11:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="verifyErrorMessageForKeepingFirstNameBlank()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="verifyErrorMessageForKeepingFirstNameBlank" duration-ms="2571" started-at="2019-10-08T04:11:35Z" finished-at="2019-10-08T04:11:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyErrorMessageForKeepingFirstNameBlank -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="650" started-at="2019-10-08T04:11:37Z" finished-at="2019-10-08T04:11:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="1323" started-at="2019-10-08T04:11:38Z" finished-at="2019-10-08T04:11:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="verifyErrorMessageForKeepingLastNameBlank()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="verifyErrorMessageForKeepingLastNameBlank" duration-ms="2838" started-at="2019-10-08T04:11:39Z" finished-at="2019-10-08T04:11:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyErrorMessageForKeepingLastNameBlank -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="664" started-at="2019-10-08T04:11:42Z" finished-at="2019-10-08T04:11:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="login" is-config="true" duration-ms="978" started-at="2019-10-08T04:11:43Z" finished-at="2019-10-08T04:11:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="verifyErrorMessageForNotPickingCountryOfBirth()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="verifyErrorMessageForNotPickingCountryOfBirth" duration-ms="2800" started-at="2019-10-08T04:11:44Z" finished-at="2019-10-08T04:11:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyErrorMessageForNotPickingCountryOfBirth -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="tearDown" is-config="true" duration-ms="626" started-at="2019-10-08T04:11:46Z" finished-at="2019-10-08T04:11:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:com.newHire.NewHireTest@146ba0ac]" name="closeBrowser" is-config="true" duration-ms="1483" started-at="2019-10-08T04:11:47Z" finished-at="2019-10-08T04:11:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- com.newHire.NewHireTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>

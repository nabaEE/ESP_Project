<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="44" hostname="SYSTEM-72" name="com.newHire.NewHireTest" tests="45" failures="0" timestamp="17 Jun 2020 09:53:19 GMT" time="0.027" errors="1">
  <testcase name="checkErrorForNotSelectingMaritalStatus" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- checkErrorForNotSelectingMaritalStatus -->
  <testcase name="verifyErrorMessageForNotPickingCountryOfBirth" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- verifyErrorMessageForNotPickingCountryOfBirth -->
  <testcase name="pickRegularAndValidateEmploymentStatus" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- pickRegularAndValidateEmploymentStatus -->
  <testcase name="makeEmployeeIdEditboxBlankAndValidateError" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- makeEmployeeIdEditboxBlankAndValidateError -->
  <testcase name="pickCountryIndiaAndValidateLocation" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- pickCountryIndiaAndValidateLocation -->
  <testcase name="checkErrorForNotPickingJoiningDate" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- checkErrorForNotPickingJoiningDate -->
  <testcase name="verifyErrorForPicking_DOB_lessThanEighteen_years" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- verifyErrorForPicking_DOB_lessThanEighteen_years -->
  <testcase name="openBrowser" time="0.026" classname="com.newHire.NewHireTest">
    <error type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at esp.genericLibraries.BaseClass.openBrowser(BaseClass.java:59)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- openBrowser -->
  <testcase name="verifyErrorForNotPickingLocation" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- verifyErrorForNotPickingLocation -->
  <testcase name="verifyErrorMessageForKeepingLastNameBlank" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- verifyErrorMessageForKeepingLastNameBlank -->
  <testcase name="verifyErrorForNotPickingLegalEntity" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- verifyErrorForNotPickingLegalEntity -->
  <testcase name="CheckErrorForKeepingRoleEditboxBlank" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- CheckErrorForKeepingRoleEditboxBlank -->
  <testcase name="checkErrorForNotPickingUniversityName" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- checkErrorForNotPickingUniversityName -->
  <testcase name="validateErrorForNotPickingEmploymentType" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- validateErrorForNotPickingEmploymentType -->
  <testcase name="keepEmailIdSectionBlankAndVerifyError" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- keepEmailIdSectionBlankAndVerifyError -->
  <testcase name="VerifyErrorForkeepingTitleWinBlank" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- VerifyErrorForkeepingTitleWinBlank -->
  <testcase name="verifyErrorForNotPickingCountry" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- verifyErrorForNotPickingCountry -->
  <testcase name="checkErrorForKeepingDepartmentEditboxBlank" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- checkErrorForKeepingDepartmentEditboxBlank -->
  <testcase name="verifyErrorForKeepingDesignationBlank" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- verifyErrorForKeepingDesignationBlank -->
  <testcase name="pickCountrySingaporeAndValidateLocation" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- pickCountrySingaporeAndValidateLocation -->
  <testcase name="displayErrorForNotPickingFT_Indicator" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- displayErrorForNotPickingFT_Indicator -->
  <testcase name="pickCountryUAEAndValidateLocation" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- pickCountryUAEAndValidateLocation -->
  <testcase name="checkErrorForNotPickingEducationDetails" time="0.001" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- checkErrorForNotPickingEducationDetails -->
  <testcase name="checkErrorForNotPickingGender" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- checkErrorForNotPickingGender -->
  <testcase name="pickCountrySriLankaAndValidateLocation" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- pickCountrySriLankaAndValidateLocation -->
  <testcase name="checkErrorMessageForNotPickingDOB" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- checkErrorMessageForNotPickingDOB -->
  <testcase name="clickAndverifyTitleDropdownValues" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- clickAndverifyTitleDropdownValues -->
  <testcase name="checkErrorForKeepingReferalSearchBoxBlank" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- checkErrorForKeepingReferalSearchBoxBlank -->
  <testcase name="checkErrorMessageForEnteringExistingEmail" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- checkErrorMessageForEnteringExistingEmail -->
  <testcase name="displayErrorForKeepingReportingManagerBlank" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- displayErrorForKeepingReportingManagerBlank -->
  <testcase name="makeBothDOB_JoiningDateEqualAndverifyError" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- makeBothDOB_JoiningDateEqualAndverifyError -->
  <testcase name="verifyErrorMessageForKeepingFirstNameBlank" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- verifyErrorMessageForKeepingFirstNameBlank -->
  <testcase name="uploadProfilePhotoWithIncorrectFormat" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- uploadProfilePhotoWithIncorrectFormat -->
  <testcase name="checkErrorForKeepingCityOfBirthBlank" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- checkErrorForKeepingCityOfBirthBlank -->
  <testcase name="verifyErrorForNotPickingFTE_Equivalent" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- verifyErrorForNotPickingFTE_Equivalent -->
  <testcase name="verifyErrorForNotPickingContractEndDate" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- verifyErrorForNotPickingContractEndDate -->
  <testcase name="enterExistEmployeeIdAndValidateErrorMessage" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- enterExistEmployeeIdAndValidateErrorMessage -->
  <testcase name="checkErrorForNotPickingGroupJoiningDate" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- checkErrorForNotPickingGroupJoiningDate -->
  <testcase name="checkErrorMessageForNotPickingStateOfBirth" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- checkErrorMessageForNotPickingStateOfBirth -->
  <testcase name="verifyErrorForNotPickingEmploymentStatus" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- verifyErrorForNotPickingEmploymentStatus -->
  <testcase name="uploadProfilePhotoWithCorrectFormat" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- uploadProfilePhotoWithCorrectFormat -->
  <testcase name="submitNewHireFormAndValidateActivateButton" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- submitNewHireFormAndValidateActivateButton -->
  <testcase name="checkErrorForKeepingRelevantExpEditboxBlank" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- checkErrorForKeepingRelevantExpEditboxBlank -->
  <testcase name="checkErrorForNotPickingCitizenShip" time="0.000" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- checkErrorForNotPickingCitizenShip -->
  <testcase name="markAttendance" classname="com.newHire.NewHireTest">
    <skipped/>
  </testcase> <!-- markAttendance -->
</testsuite> <!-- com.newHire.NewHireTest -->
